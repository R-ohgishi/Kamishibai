name: Swift

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: Select Xcode version # Xcode 12.4 を使う　ローカルと合わせておかないとビルドが通らないことがある
      run: sudo xcode-select -s '/Applications/Xcode_12.4.app/Contents/Developer'
        
    # 証明書関連のファイル生成。Base64エンコード
    - name: Import Provisioning Profile
      run: |
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        touch ~/Library/MobileDevice/Provisioning\ Profiles/decoded.mobileprovision
        echo -n '${{ secrets.PROVISIONING_PROFILE }}' | base64 -d -o ~/Library/MobileDevice/Provisioning\ Profiles/decoded.mobileprovision
    - name: Import Code-Signing Certificates
      uses: Apple-Actions/import-codesign-certs@v1
      with:
        p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
        p12-password: ${{ secrets.CERTIFICATE_PASSWORD }}
    #ビルド
    #- run: xcodebuild
          
    # ipaの出力
    - name: XCode Build Archive
      uses: yukiarrr/ios-build-action@v1.1.1
      with:
        project-path: /Users/runner/work/Kamishibai/Kamishibai/Kamishibai.xcodeproj
        p12-base64: ${{ secrets.CERTIFICATES_P12 }}
        certificate-password: ${{ secrets.CERTIFICATE_PASSWORD }}
        mobileprovision-base64: ${{ secrets.PROVISIONING_PROFILE }}
        code-signing-identity: ${{ secrets.CODE_SIGNING_IDENTITY }}
        team-id: ${{ secrets.TEAM_ID }}
        output-path: app-release.ipa
        export-method: ad-hoc
      
    # ipaをdeploygate経由で配布
    - name: Distribute iOS app
      run: |
        curl \
          -H "Authorization: token ${{secrets.DEPLOYGATE_API_KEY}}" \
          -F "file=@/Users/runner/work/Kamishibai/Kamishibai/app-release.ipa" \
          -F "release_note=new ios build" \
          https://deploygate.com/api/users/${{secrets.DEPLOY_GATE_USER_NAME}}/apps
